/*jslint browser: true*//*global $, jQuery, alert*/$(document).ready(function () {		$(".cis_pages").on("click", function () {		var iPageNum = $(this).attr('rel');		$("#iPageNum").val(iPageNum);		$("#resultForm").submit();				    });	$(".cis_search").on("click", function () {		$("#iPageNum").val(1);		$("#resultForm").submit();		    });	$(".cis_filter").on("change", function () {		$("#iPageNum").val(1);		$("#resultForm").submit();			    });	$("input:file").change(function (){	   var fileName = $(this).val().replace(/.*(\/|\\)/, '');	   var cfid = $(this).parent().attr('id');	   $("<style> #"+cfid+" .custom-file-control:lang(en)::after{content:'" + fileName + "'; }</style>" ).appendTo("head");	});	$(".custom-file").each(function(i) {	  $(this).attr("id", "custom-file-"+i);	  i++;	});	$(".custom-file-input").focusin(function() {	  $(this).next('span').addClass('custom-file-control-active');	});	$(".custom-file-input").focusout(function() {	  $(this).next('span').removeClass('custom-file-control-active');	});	$(".input-group-append > .input-group-text > .icon-calender").each(function() {	  //$(this).next(".input-group-addon").addClass('datepicker-icon');	  $(this).closest(".input-group-append").addClass('datepicker-icon');	  //$(this).parent().addClass('datepicker-icon');	});	$('.datepicker-icon').on('click', function(){			$(this).prev('input').focus();			//var id = $(this).prev('input').attr('id');			//document.getElementById(id).setSelectionRange(0,0);	});	$("input[data-mask]").focus(function(){		$(this).on("click.a keyup.a", function(e){      			$(this).off("click.a keyup.a").select();		});	});		$('.js-switch').change(function() {		var txtid = $(this).attr('id')+'-txt';		var datayes = $(this).attr('data-yes');		var datano = $(this).attr('data-no');		if($(this).is(':checked')){			$("#"+txtid).html(datayes);			$("#"+txtid).addClass('switch-success');		}else{			$("#"+txtid).html(datano);			$("#"+txtid).removeClass('switch-success');		}	});	var _validImageExtensions = [".jpg", ".jpeg",".png"];	$('.image_only').change(function(){		var name = $(this).attr('name');		var max_size = parseInt($(this).attr('data-size'));		$(this).closest('.form-group').removeClass('has-danger');		$('#'+name+'_error').html('');		var size = parseFloat(this.files[0].size / 1024).toFixed(2);		if(size>max_size){			$(this).closest('.form-group').addClass('has-danger');			$('#'+name+'_error').html('Sorry, filesize should be lessthen '+max_size+' KB');			$(this).attr('data-submit',0);			return false;		}					var sFileName = $(this).val();		 if (sFileName.length > 0) {			var blnValid = false;			for (var j = 0; j < _validImageExtensions.length; j++) {				var sCurExtension = _validImageExtensions[j];				if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {					blnValid = true;					break;				}			}				 			if (!blnValid) {				$(this).closest('.form-group').addClass('has-danger');				$('#'+name+'_error').html("Sorry, filetype is invalid, allowed extensions are: " + _validImageExtensions.join(", "));				$(this).attr('data-submit',0);				return false;			}		}					$(this).attr('data-submit',1);	});	//Browse PDF Only	var _validPdfExtensions = [".pdf"];	$('.pdf_only').change(function(){		var name = $(this).attr('name');		var max_size = parseInt($(this).attr('data-size'));		$(this).closest('.form-group').removeClass('has-danger');		$('#'+name+'_error').html('');		var size = parseFloat(this.files[0].size / 1024).toFixed(2);		if(size>max_size){			$(this).closest('.form-group').addClass('has-danger');			$('#'+name+'_error').html('Sorry, filesize should be lessthen '+max_size+' KB');			$(this).attr('data-submit',0);			return false;		}					var sFileName = $(this).val();		 if (sFileName.length > 0) {			var blnValid = false;			for (var j = 0; j < _validPdfExtensions.length; j++) {				var sCurExtension = _validPdfExtensions[j];				if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {					blnValid = true;					break;				}			}				 			if (!blnValid) {				$(this).closest('.form-group').addClass('has-danger');				$('#'+name+'_error').html("Sorry, filetype is invalid, allowed extensions are: " + _validPdfExtensions.join(", "));				$(this).attr('data-submit',0);				return false;			}		}					$(this).attr('data-submit',1);	});	//Browse Image or PDF Only	var _validImgPdfExtensions = [".jpg", ".jpeg",".png",".pdf"];	$('.image_pdf_only').change(function(){		var name = $(this).attr('name');		var max_size = parseInt($(this).attr('data-size'));		$(this).closest('.form-group').removeClass('has-danger');		$('#'+name+'_error').html('');		var size = parseFloat(this.files[0].size / 1024).toFixed(2);		if(size>max_size){			$(this).closest('.form-group').addClass('has-danger');			$('#'+name+'_error').html('Sorry, filesize should be lessthen '+max_size+' KB');			$(this).attr('data-submit',0);			return false;		}					var sFileName = $(this).val();		 if (sFileName.length > 0) {			var blnValid = false;			for (var j = 0; j < _validImgPdfExtensions.length; j++) {				var sCurExtension = _validImgPdfExtensions[j];				if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {					blnValid = true;					break;				}			}				 			if (!blnValid) {				$(this).closest('.form-group').addClass('has-danger');				$('#'+name+'_error').html("Sorry, filetype is invalid, allowed extensions are: " + _validImgPdfExtensions.join(", "));				$(this).attr('data-submit',0);				return false;			}		}					$(this).attr('data-submit',1);	});	//Browse XLS Only	var _validXlsExtensions = [".xls"];	$('.xls_only').change(function(){		var name = $(this).attr('name');		var max_size = parseInt($(this).attr('data-size'));		$(this).closest('.form-group').removeClass('has-danger');		$('#'+name+'_error').html('');		var size = parseFloat(this.files[0].size / 1024).toFixed(2);		if(size>max_size){			$(this).closest('.form-group').addClass('has-danger');			$('#'+name+'_error').html('Sorry, filesize should be lessthen '+max_size+' KB');			$(this).attr('data-submit',0);			return false;		}					var sFileName = $(this).val();		 if (sFileName.length > 0) {			var blnValid = false;			for (var j = 0; j < _validXlsExtensions.length; j++) {				var sCurExtension = _validXlsExtensions[j];				if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() == sCurExtension.toLowerCase()) {					blnValid = true;					break;				}			}				 			if (!blnValid) {				$(this).closest('.form-group').addClass('has-danger');				$('#'+name+'_error').html("Sorry, filetype is invalid, allowed extensions are: " + _validXlsExtensions.join(", "));				$(this).attr('data-submit',0);				return false;			}		}					$(this).attr('data-submit',1);	});		/*$('input[type=email]').change(function() {		var email = $(this).val();		$(this).closest('.form-group').removeClass('has-danger');		var regex = /^([a-zA-Z0-9_.+-])+\@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;		if(!regex.test(email)){			$(this).closest('.form-group').addClass('has-danger');				return false;					}						});*/	/*$('.fancybox').fancybox();	$(".fancybox1").fancybox({		'padding': 2	});*/		$.fn.extend({		clearFiles: function () {			$(this).each(function () {				var isIE = (window.navigator.userAgent.indexOf("MSIE ") > 0 || !! navigator.userAgent.match(/Trident.*rv\:11\./));				if ($(this).prop("type") == 'file') {					if (isIE == true) {						$(this).replaceWith($(this).val('').clone(true));					} else {						$(this).val("");					}				}			});			return this;		}	});		$('.number_only').bind('paste input', allowNumbersOnly);	$('.number_only_dot').bind('paste input', allowNumbersOnlywithDot);	$('.number_only_comma').bind('paste input', allowNumbersOnlywithComma);	$('.email_only').bind('paste input', allowEmailOnly);	$('.phone_only').bind('paste input', allowPhoneOnly);	$('.alpha_numeric').bind('paste input', allowAlphaNumeric);	$('.alpha_only').bind('paste input', allowAlphaOnly);	$('.name_only').bind('paste input', allowNameOnly);	$('.splname_only').bind('paste input', allowCompName);	$('.address_only').bind('paste input', allowAddress);	});function allowNumbersOnly(e) {    var self = $(this);    setTimeout(function () {        var initVal = self.val(),            outputVal = initVal.replace(/[^0-9]/g, "");        if (initVal != outputVal) self.val(outputVal);    });}function allowNumbersOnlywithDot(e) {	var self = $(this);	var regex = /[^0-9\.]/g;	setTimeout(function () {        var initVal = self.val(),        outputVal = initVal.replace(regex, "");        if (initVal != outputVal) self.val(outputVal);    });}function allowNumbersOnlywithComma(e) {	var self = $(this);	var regex = /[^0-9\,]/g;	setTimeout(function () {        var initVal = self.val(),        outputVal = initVal.replace(regex, "");        if (initVal != outputVal) self.val(outputVal);    });}function allowEmailOnly(e) {	var self = $(this);	var regex = /[^@a-zA-Z0-9._-]/g;	setTimeout(function () {        var initVal = self.val(),        outputVal = initVal.replace(regex, "");        if (initVal != outputVal) self.val(outputVal);    });}function allowPhoneOnly(e) {	var self = $(this);	var regex = /[^ 0-9-+]/g;	setTimeout(function () {        var initVal = self.val(),        outputVal = initVal.replace(regex, "");        if (initVal != outputVal) self.val(outputVal);    });}function allowAlphaNumeric(e) {	var self = $(this);	var regex = /[^ a-zA-Z0-9]/g;	setTimeout(function () {        var initVal = self.val(),        outputVal = initVal.replace(regex, "");        if (initVal != outputVal) self.val(outputVal);    });}function allowAlphaOnly(e) {	var self = $(this);	var regex = /[^a-zA-Z]/g;	setTimeout(function () {        var initVal = self.val(),        outputVal = initVal.replace(regex, "");        if (initVal != outputVal) self.val(outputVal);    });}function allowNameOnly(e) {	var self = $(this);	var regex = /[^ a-zA-Z.]/g;	setTimeout(function () {        var initVal = self.val(),        outputVal = initVal.replace(regex, "");        if (initVal != outputVal) self.val(outputVal);    });}function allowCompName(e) {	var self = $(this);	var regex = /[^ a-zA-Z0-9.,&-/]/g;	setTimeout(function () {        var initVal = self.val(),        outputVal = initVal.replace(regex, "");        if (initVal != outputVal) self.val(outputVal);    });}function allowAddress(e) {	var self = $(this);	var regex = /[^ a-zA-Z0-9.,&_+-/()]\n/g;	setTimeout(function () {        var initVal = self.val(),        outputVal = initVal.replace(regex, "");        if (initVal != outputVal) self.val(outputVal);    });}function datatable_init(){	$('[data-toggle="tooltip"]').tooltip();	$('.fancybox').fancybox();}function getNum(val) {   var val = parseFloat(val);   if (isNaN(val)) {     return 0;   }   return val;}function zeroPad(num, places) {  var zero = places - num.toString().length + 1;  return Array(+(zero > 0 && zero)).join("0") + num;}/* ======== LIVE TIMER   ====================== var d = new Date(2017,1,1,0,0,0,0);function transformMiliseconds(t){  var r = Math.floor((t/(1000*60*60))%24)+0;  var h = Math.floor((t/(1000*60*60))%12)+0;  var m = Math.floor((t/(1000*60))%60);  var s = Math.floor((t/1000)%60);    r = (r <12)?'AM':'PM';  h = (h == 0)?12:h;  h = (h <10)?'0'+h:h;  m = (m <10)?'0'+m:m;  s = (s <10)?'0'+s:s;  return h+':'+m+':'+s+' '+r;}function tick(){  var newd = new Date();  document.getElementById('time_ticker').innerHTML = transformMiliseconds(newd-d);}var t = setInterval(tick, 1000);/* ======== LIVE TIMER   ====================== */