<?phpdate_default_timezone_set('Asia/Calcutta');$ip=@$REMOTE_ADDR;function isAdmin(){	if($_SESSION['_user']!="CISADMIN"){		$_SESSION['_msg']="Session Expired. Please Relogin";		header("Location:index.php");				die();	}}function isAjaxAdmin(){	if($_SESSION['_user']!="CISADMIN"){		echo $_SESSION['_msg']="Session Expired. Please Relogin";		die();	}	return true;}function StandardHash($plain) {	return md5("$plain:CISadmin2020");}function leadingZeros($num,$numDigits) {   return sprintf("%0".$numDigits."d",$num);}function StrTruncate($str,$chars) {return substr($str,0,strlen($str)-$chars);}function send_mail($strTo,$strFrom,$strSubject,$strContent){	$to=$strTo;	$subject=$strSubject; 	$headers="MIME-Version: 1.0\r\n";	$headers.="Content-type: text/html; charset=iso-8859-1\r\n";	$headers.="From:".$strFrom."\r\n";	//$headers.="Bcc: "."\r\n";	return $isSent = mail($to,$subject,$strContent,$headers);}function send_mail_cc($strTo,$strFrom,$strCC,$strSubject,$strContent){	$to=$strTo;	$subject=$strSubject; 	$headers="MIME-Version: 1.0\r\n";	$headers.="Content-type: text/html; charset=iso-8859-1\r\n";	$headers.="From: ".$strFrom."\r\n";	$headers.="Cc: ".$strCC."\r\n";//	$headers .= 'Bcc:' . "\r\n";	return $isSent = mail($to,$subject,$strContent,$headers);}function random_password(){    $chars = "abcdefghijkmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ023456789";	//echo strlen($chars);    srand((double)microtime()*1000000);    $i = 0;    $pass = '' ;    while ($i <= 8) {        $num = rand() % 60;        $tmp = substr($chars, $num, 1);        $pass = $pass . $tmp;        $i++;    }    return $pass;}function random_numbers($length){    $chars = "0123456789";	//echo strlen($chars);    srand((double)microtime()*1000000);    $i = 0;    $pass = '' ;    while ($i < $length) {        $num = rand() % 10;        $tmp = substr($chars, $num, 1);        $pass = $pass . $tmp;        $i++;    }    return $pass;}function post_img($fileName,$tempFile,$targetFolder){	 	if ($fileName!="")	{		if(!(is_dir($targetFolder)))		mkdir($targetFolder);		$counter=0;		$NewFileName=$fileName;		if(file_exists($targetFolder."/".$NewFileName))			{				do				{ 					$counter=$counter+1;					$NewFileName=$counter."".$fileName;				}				while(file_exists($targetFolder."/".$NewFileName));			}		$NewFileName=str_replace(",","-",$NewFileName);		$NewFileName=str_replace(" ","_",$NewFileName);			copy($tempFile, $targetFolder."/".$NewFileName);			return $NewFileName;	}}function removeFile($filename){	if (file_exists($filename))	{		unlink($filename);	}}function seo_url($str){	$str = preg_replace('/\%/',' percentage',$str);	$str = preg_replace('/\@/',' at ',$str);	$str = preg_replace('/\&/',' and ',$str);	$str = preg_replace('/\s[\s]+/','-',$str);    // Strip off multiple spaces	$str = preg_replace('/[\s\W]+/','-',$str);    // Strip off spaces and non-alpha-numeric	$str = preg_replace('/^[\-]+/','',$str); // Strip off the starting hyphens	$str = preg_replace('/[\-]+$/','',$str); // // Strip off the ending hyphens	$str = strtolower($str); 	return $str;}function allowfile($filename,$allowed){	$ext = strtolower(pathinfo($filename, PATHINFO_EXTENSION));	if(!in_array($ext,$allowed) ) {		return false;		die();	}	if (strpos(strtolower($filename), '.php')!== FALSE){		return false;		die();	}	return true;}function closeConnection($body, $responseCode){    set_time_limit(0);    ignore_user_abort(true);    ob_end_clean();    ob_start();    echo $body;    $size = ob_get_length();    header("Connection: close\r\n");    header("Content-Encoding: none\r\n");    header("Content-Length: $size");    ob_end_flush();    @ob_flush();    flush();}//this projectfunction sendSMS($numbers = FALSE, $msg = FALSE){		/*$msg = urlencode($msg);	$msg = str_replace('%3Cbr%3E','%0A',$msg);	$remove = array("\n", "\r\n", "\r",";",",,",",,,");	$numbers = str_replace($remove, ',',$numbers);	$numbers = str_replace($remove, ',',$numbers);		$url="";	$ch = curl_init();	curl_setopt($ch, CURLOPT_URL, $url);	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);	$store = curl_exec ($ch);	curl_close ($ch);	return $store;*/		}class Encryption56 {    var $skey = "CISadmin2020";    public function encode($string){ 		$encrypted = base64_encode(mcrypt_encrypt(MCRYPT_RIJNDAEL_256, md5($this->skey), $string, MCRYPT_MODE_CBC, md5(md5($this->skey))));		$encrypted = str_replace(array('+','/','='),array('-','_',''),$encrypted);        return $encrypted;    }    public function decode($encrypted){        $encrypted = str_replace(array('-','_'),array('+','/'),$encrypted);        $mod4 = strlen($encrypted) % 4;        if ($mod4) {            $encrypted .= substr('====', $mod4);        }        $decrypted = rtrim(mcrypt_decrypt(MCRYPT_RIJNDAEL_256, md5($this->skey), base64_decode($encrypted), MCRYPT_MODE_CBC, md5(md5($this->skey))), "\0");		return $decrypted;    }}class EncryptionOld {    var $skey = "CISadmin2020"; // you can change it    public  function safe_b64encode($string) {        $data = base64_encode($string);        $data = str_replace(array('+','/','='),array('-','_',''),$data);        return $data;    }    public function safe_b64decode($string) {        $data = str_replace(array('-','_'),array('+','/'),$string);        $mod4 = strlen($data) % 4;        if ($mod4) {            $data .= substr('====', $mod4);        }        return base64_decode($data);    }    public function encode($value){         		if(!$value){return false;}				$crypttext = mcrypt_encrypt(			MCRYPT_RIJNDAEL_128,			$this->skey,			$value,			MCRYPT_MODE_CBC,			"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"		);		return trim($this->safe_b64encode($crypttext));    }    public function decode($value){        if(!$value){return false;}        //$value = base64_decode($value);		$value = $this->safe_b64decode($value); 		return mcrypt_decrypt(			MCRYPT_RIJNDAEL_128,			$this->skey,			$value,			MCRYPT_MODE_CBC,			"\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"        );    }}class Encryption {    var $FIRSTKEY = 'TmFscy5pbi1LYWJpbGFuLTIwMjA=';    var $SECONDKEY = 'MjAyMC1LYWJpbGFuLU5hbHMuaW4=';	public  function safe_b64encode($string) {        $data = base64_encode($string);        $data = str_replace(array('+','/','='),array('-','_',''),$data);        return $data;    }    public function safe_b64decode($string) {        $data = str_replace(array('-','_'),array('+','/'),$string);        $mod4 = strlen($data) % 4;        if ($mod4) {            $data .= substr('====', $mod4);        }        return base64_decode($data);    }	public function encode($data) {		$first_key = base64_decode($this->FIRSTKEY);		$second_key = base64_decode($this->SECONDKEY);		$method = "aes-256-cbc";   		$iv_length = openssl_cipher_iv_length($method);		$iv = openssl_random_pseudo_bytes($iv_length);		$first_encrypted = openssl_encrypt($data,$method,$first_key, OPENSSL_RAW_DATA ,$iv);   		$second_encrypted = hash_hmac('sha3-512', $first_encrypted, $second_key, TRUE);		$output = base64_encode($iv.$second_encrypted.$first_encrypted);		return trim($this->safe_b64encode($output));    }	public function decode($input) {		$first_key = base64_decode($this->FIRSTKEY);		$second_key = base64_decode($this->SECONDKEY);		$input = $this->safe_b64decode($input);		$mix = base64_decode($input);			   		$method = "aes-256-cbc";   		$iv_length = openssl_cipher_iv_length($method);				   		$iv = substr($mix,0,$iv_length);		$second_encrypted = substr($mix,$iv_length,64);		$first_encrypted = substr($mix,$iv_length+64);				   		$data = openssl_decrypt($first_encrypted,$method,$first_key,OPENSSL_RAW_DATA,$iv);		$second_encrypted_new = hash_hmac('sha3-512', $first_encrypted, $second_key, TRUE);		   		if (hash_equals($second_encrypted,$second_encrypted_new))		return $data;   		return false;    }}?>